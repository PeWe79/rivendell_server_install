# Install Rivendell 3.6.6 On Ubuntu 18.04 LTS /on VMWare
# This installer Rivendell configure as Rivendell Server

sudo apt update && sudo apt -y upgrade

# If install on VMWare
sudo su
sudo apt -y install open-vm-tools-desktop -y
sudo reboot now

# Create Virtual Soundcard on VMWare :
sudo apt -y install alsa-utils alsa-tools alsa-source

#
# Create Dummy Sound Card on VMWare
sudo nano /etc/modules
# Add this on the end :
snd-dummy

sudo modprobe snd-dummy 
sudo alsa force-reload

# Disable PulseAudio :
sudo killall pulseaudio
sudo nano /etc/pulse/client.conf
# >> Uncomment the autospawn and make it no:
autospawn = no

# Install Qjackcontrol :
sudo apt -y install qjackctl
# Do not enable "realtime" if prompted.
ulimit -r -l

# Make JACK run on login:
cd
mkdir rd_scripts
cd rd_scripts
nano on_startup.sh

# Paste in the following:
#!/bin/bash
screen -DmS jack jackd -dalsa -hw:Dummy,0 -r48000 -p1024 -n3 -s &

# IMPORTANT:
# The -hw:Dummy,0 line above may need to be changed to your primary sound adaptor number. aplay -l and aplay -L will show these.
# The sample rate is set to 44100 in the script above. You might choose to change this to 48000.

chmod +x on_startup.sh

# Add on qjackctl on startup!!
Add on_startup.sh on Options >> Execute script on Startup

# Install Qt4 & :
sudo apt -y install libqt4-dev libqt4-sql-mysql libmp4v2-dev libfdk-aac-dev libmysqlclient-dev

# Install build tools:
sudo apt -y install apache2 build-essential autogen automake pkg-config libtool m4 make libssl-dev gcc g++ libssh-dev libexpat1-dev git unzip unrar wget libcanberra-gtk-module

# Prepare web server (Apache2):
sudo a2enmod cgid
sudo systemctl restart apache2

# Install Rivendell dependencies
sudo apt -y install libtag1-dev libid3-3.8.3-dev libcurl4-gnutls-dev libsndfile1-dev libpam0g-dev libsamplerate0-dev libsoundtouch-dev libsystemd-dev libjack-jackd2-dev libice-dev libsm-dev libxt-dev libxi-dev libsndfile-dev libasound2-dev libopus-dev libogg-dev libvorbis-dev libflac-dev libflac++-dev libmp3lame-dev libfaad-dev libmad0-dev libtwolame-dev

sudo apt -y install libcoverart-dev libdiscid-dev libmusicbrainz5-dev libcdparanoia-dev docbook5-xml docbook-xsl-ns xsltproc fop libxml2-utils openssh-server patch evince telnet samba ntp nfs-common smbclient net-tools traceroute ntfs-3g autofs

# To get pypad (icecast &&) running:
sudo apt -y install python3-mysqldb python3 python3-pycurl python3-pymysql python3-serial python3-requests python3-dev

#
# Configure Environment
#
sudo su
echo "export DOCBOOK_STYLESHEETS=/usr/share/xml/docbook/stylesheet/docbook-xsl-ns" > /etc/profile.d/docbook5.sh

# MariaDb serverinstallation :
apt -y install mariadb-server

# Copy 90-rivendell.conf :
cp -f assets/90-rivendell.conf /etc/mysql/mariadb.conf.d/

# Edit 50-server.cnf
# From bind-address   = 127.0.0.1 to bind-address   = *
nano /etc/mysql/mariadb.conf.d/50-server.cnf
systemctl restart mysql

#
# Create Database RIvendell
# Enable DB Access for localhost
#
echo "CREATE DATABASE Rivendell;" | mysql -u root
echo "CREATE USER 'rduser'@'localhost' IDENTIFIED BY 'letmein';" | mysql -u root
echo "GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES ON Rivendell.* TO 'rduser'@'localhost';" | mysql -u root

#
# Enable DB Access for all remote hosts
#
echo "CREATE USER 'rduser'@'%' IDENTIFIED BY 'letmein';" | mysql -u root
echo "GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,CREATE TEMPORARY TABLES,LOCK TABLES ON Rivendell.* TO 'rduser'@'%';" | mysql -u root

exit

#
# Enable NFS Access for all remote hosts
# Edit/change $USER to user ubuntu
#
mkdir -p /home/$USER/rd_xfer
chown $USER:$USER /home/$USER/rd_xfer
mkdir -p /home/$USER/music_export
chown $USER:$USER /home/$USER/music_export
mkdir -p /home/$USER/music_import
chown $USER:$USER /home/$USER/music_import
mkdir -p /home/$USER/traffic_export
chown $USER:$USER /home/$USER/traffic_export
mkdir -p /home/$USER/traffic_import
chown $USER:$USER /home/$USER/traffic_import

# Lets install Ntfs Kernel Server
sudo su
apt -y install nfs-kernel-server
mkdir -p /srv/nfs4/var/snd
mkdir -p /srv/nfs4/home/$USER/music_export
mkdir -p /srv/nfs4/home/$USER/music_import
mkdir -p /srv/nfs4/home/$USER/traffic_export
mkdir -p /srv/nfs4/home/$USER/traffic_import
mkdir -p /srv/nfs4/home/$USER/rd_xport

echo "/var/snd /srv/nfs4/var/snd none bind 0 0" >> /etc/fstab
echo "/home/$USER/music_export /srv/nfs4/home/$USER/music_export none bind 0 0" >> /etc/fstab
echo "/home/$USER/music_import /srv/nfs4/home/$USER/music_import none bind 0 0" >> /etc/fstab
echo "/home/$USER/traffic_export /srv/nfs4/home/$USER/traffic_export none bind 0 0" >> /etc/fstab
echo "/home/$USER/traffic_import /srv/nfs4/home/$USER/traffic_import none bind 0 0" >> /etc/fstab
echo "/home/$USER/rd_xfer /srv/nfs4/home/$USER/rd_xfer none bind 0 0" >> /etc/fstab
echo "/var/snd *(rw,no_root_squash)" >> /etc/exports
echo "/home/$USER/rd_xfer *(rw,no_root_squash)" >> /etc/exports
echo "/home/$USER/music_export *(rw,no_root_squash)" >> /etc/exports
echo "/home/$USER/music_import *(rw,no_root_squash)" >> /etc/exports
echo "/home/$USER/traffic_export *(rw,no_root_squash)" >> /etc/exports
echo "/home/$USER/traffic_import *(rw,no_root_squash)" >> /etc/exports

#
# Enable CIFS File Sharing
#
cp /etc/samba/smb.conf /etc/samba/smb-original.conf

#
# Edit $USER to Ubuntu user
# Then
#
cat assets/samba_shares.conf >> /etc/samba/smb.conf
systemctl enable smbd
systemctl enable nmbd
exit

#
# Get rivendell sources:
# Install Rivendell
#
wget https://github.com/ElvishArtisan/rivendell/releases/download/v3.6.6/rivendell-3.6.6.tar.gz
tar xf rivendell-3.6.6.tar.gz
cd rivendell-3.6.6
./autogen.sh

# Lets Compile Rivendell Source :
# With docbook extension :
export PATH=/sbin:$PATH
./configure MUSICBRAINZ_LIBS="-L/usr/local/lib -ldiscid -lmusicbrainz5cc -lcoverartcc" --libexecdir=/var/www/rd-bin --sysconfdir=/etc/apache2/conf-available
export DOCBOOK_STYLESHEETS=/usr/share/xml/docbook/stylesheet/docbook-xsl-ns

make

# Disable docbook extension :
./configure MUSICBRAINZ_LIBS="-L/usr/local/lib -ldiscid -lmusicbrainz5cc -lcoverartcc" --libexecdir=/var/www/rd-bin --sysconfdir=/etc/apache2/conf-available --disable-docbook
make

sudo make install
sudo ldconfig


# Copy the Apache configuration :
sudo nano conf/rd-bin.conf
# Around line 24 you will see:
  
  Options ExecCGI FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all

# Delete these two lines:
  Order allow,deny
  Allow from all

# ...and replace with the new way of doing things:
  Require all granted

# Copy to apache2 web available:
sudo cp conf/rd-bin.conf /etc/apache2/conf-available/
sudo ln -s /etc/apache2/conf-available/rd-bin.conf /etc/apache2/conf-enabled/rd-bin.conf
sudo systemctl restart apache2

# Prepare os :
sudo adduser --uid 150 --system --group --home=/var/snd rivendell
sudo adduser $USER rivendell
sudo chown $USER:$USER /var/snd
sudo chmod ug+rwx /var/snd

#
# Configure Rivendell
#
sudo su
patch -p0 /etc/rsyslog.d/50-default.conf assets/50-default.conf.patch
mkdir -p /usr/share/pixmaps/rivendell
cp assets/rdairplay_skin.png /usr/share/pixmaps/rivendell/
cp assets/rdpanel_skin.png /usr/share/pixmaps/rivendell/
exit

#
# Copy & Configure rd.conf
#
sudo cp conf/rd.conf-sample /etc/rd.conf
# Edit the file and update with any relevant user names, groups, etc :
# Edit AudioOwner=username
# Save & exit
sudo nano /etc/rd.conf
sudo su
cat /etc/rd.conf | sed s/SyslogFacility=1/SyslogFacility=23/g > /etc/rd-temp.conf
mv -f /etc/rd-temp.conf /etc/rd.conf
exit

# Change this for missmatch QT X11!!:
sudo nano /etc/environment
# Add at the end
QT_X11_NO_MITSHM=1

# Create your new Rivendell Database and generate audio :
#
sudo su
rddbmgr --create --generate-audio

#
# Setup Log Editor on database
echo "update `STATIONS` set `REPORT_EDITOR_PATH`='/usr/bin/gedit'" | mysql -u root Rivendell
exit

# If you are updating from a previous version of Rivendell, then restore and / or update your database with rddbconfig:
sudo rddbconfig
# Or if updating :
sudo rddbmgr --modify

# Note, when updating from a previous 2.x version of Rivendell, I found that I had to start with an empty Rivendell database and use the Restore option in rddbconfig for the database to properly import and update to the latest schema.

# Configure audio cards for ALSA access :
# If you want to use your audio cards through ALSA, then configure them for access:
sudo rdalsaconfig

# Then start up rdadmin:

# Now we can start and check the Rivendell service. We dont set this to auto-start as it has to run after jack
sudo systemctl start rivendell
sudo systemctl enable rivendell
sudo systemctl status rivendell

# Optional - Disable rdmonitor !
# The easiest is to just make it no longer executable. From a shell:
sudo chmod -x /usr/local/bin/rdmonitor
# Then if you reboot you'll find that rdmonitor does not pop up. If you later decide you want to re-enable it, just make it executable again:
sudo chmod +x /usr/local/bin/rdmonitor
# If wan to deleted :
sudo rm /etc/X11/xinit/xinitrc.d/start-rdmonitor.sh


# To have Systemd start up the Rivendell services under the logged in user, we have to edit the following file :
sudo nano /lib/systemd/system/rivendell.service
# The following line needs to be added to the end of the [Service] section:
User=$USER  <--- Update the '$USER' with your logged in user - the one you want the daemons and Jack to run under!

# The final file should look like this:
[Unit]
Description=Rivendell Radio Automation System
After=network.target remote-fs.target nss-lookup.target

[Service]
Type=simple
ExecStart=/usr/local/sbin/rdservice
PrivateTmp=false
Restart=always
RestartSec=2
StartLimitInterval=120
StartLimitBurst=50
User=$USER << Edit as Ubuntu User!

[Install]
WantedBy=multi-user.target

# Now we reload the service file:
sudo systemctl daemon-reload

#
# Making Pypad Scipts Work
# Copy this file for pypad active and running for streaming, RDS etc :
sudo cp apis/pypad/api/pypad.py /usr/lib/python3/dist-packages/

cd

# Under manually started applications, add in the command to start Jackd. I normally put this into a detached screen session.
# Once that is done, modify your root crontab :
sudo crontab -e
# And add in a line for a delay and a start of the Rivendell services :
@reboot sleep 60 && systemctl restart rivendell

#
# Note: Older and slower booting systems may need 30 changing to 60 seconds or longer.
# After a reboot, the system will start the Rivendell services 30 seconds after the system has logged in. This is a bit messy but works well. If any other programs or services need to run automatically (such as rdairplay) at boot, these should have a "sleep 60" command or similar before them to ensure everything has started first.
# Note: If you login manually you will need to type "sudo systemctl restart rivendell" after logging in to start Rivendell as the crontab entry above will not work (because it will run before you get a chance to login and run Jack and it needs to run after Jack has loaded). However on unattended systems, auto-login is needed to boot to the desktop and allow Rivendell to run so the crontab entry above will start everything automatically. There are probably many cleaner ways this could be run (which we will document in future) but this is our current tested method.
#
sudo reboot now

#
# Optional - Make RDSelect work
#
sudo mkdir /etc/rivendell.d
sudo mv /etc/rd.conf /etc/rivendell.d
sudo ln -s /etc/rivendell.d/rd.conf /etc/rd.conf

# End for Rivendell Installation

